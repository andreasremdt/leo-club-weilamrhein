---
import BaseLayout from "./base-layout.astro";
import Sidebar from "../components/sidebar.astro";
import Image from "../components/image.astro";
import Ribbon from "../components/ribbon.astro";
import Gallery from "../components/gallery.astro";
import Box from "../components/box.astro";
import { formatDate, getCategoryFromUrl } from "../helpers";

const {
  frontmatter: { title, description, images, date },
} = Astro.props;
const category = getCategoryFromUrl(Astro.url.pathname);
---

<BaseLayout title={title} description={description}>
  <div class="container main" id="content">
    <Box as="main">
      {
        images?.length > 0 && (
          <figure class="banner">
            <Image src={images[0]} category={category} width={1000} height={500} alt={title} loading="eager" />
          </figure>
        )
      }

      <header class:list={["header", "centered", { "has-banner": Boolean(images) }]}>
        <Ribbon variant="light">{category}</Ribbon>
        <h1 class="title">{title}</h1>
        <time datetime={date} class="date">
          Ver√∂ffentlicht am {formatDate(date)}
        </time>
      </header>

      <slot />

      {
        images?.length > 0 && (
          <Gallery
            images={images.map((src: string) => ({ src, category }))}
            width={300}
            height={200}
            galleryId="post"
            class="gallery"
          />
        )
      }
    </Box>
    <Sidebar />
  </div>
</BaseLayout>

<style>
  .main {
    margin-block: 3rem;
    display: grid;
    grid-template-columns: 1fr 20.625rem;
    gap: 0 1.5rem;
    place-items: start;
  }

  .title {
    font-size: clamp(24px, calc(2vw + 1rem), 36px);
    margin-bottom: 0.5rem;
    grid-column: span 2;
    line-height: 1.2;
  }

  .banner {
    position: relative;
    margin: -1.5rem -4rem 0 -4rem;
  }

  .banner::before,
  .banner::after {
    content: "";
    position: absolute;
    border: 1px solid rgba(255, 255, 255, 0.8);
    z-index: 1;
  }

  .banner::before {
    inset: calc(-2px + 1.5rem) calc(2px + 1.5rem);
  }

  .banner::after {
    inset: 1.5rem;
  }

  .header {
    padding: 3rem 2rem;
    background: white url(/leafs.svg) no-repeat center bottom;
    background-size: 40px;
    margin-bottom: 2rem;
  }

  .header:where(.has-banner) {
    transform: translateY(-7rem);
    border-radius: 2px;
    margin-bottom: -4rem;
  }

  .title {
    margin-block: 1rem 0;
    font-size: 28px;
  }

  .date {
    font-size: 14px;
  }

  .gallery {
    margin-top: 2rem;
  }

  @media (max-width: 62.5rem) {
    .main {
      grid-template-columns: 1fr;
      gap: 1.5rem;
    }

    .title {
      grid-column: 1;
      margin-bottom: 0;
    }
  }

  @media (max-width: 900px) {
    .banner {
      margin: -1.5rem -1.5rem 0 -1.5rem;
    }

    .banner::before {
      inset: calc(-2px + 0.75rem) calc(2px + 0.75rem);
    }

    .banner::after {
      inset: 0.75rem;
    }
  }

  @media (max-width: 500px) {
    .header:where(.has-banner) {
      transform: translateY(0);
      margin-bottom: 2rem;
    }

    .banner::before {
      inset: calc(-2px + 0.75rem) calc(2px + 0.75rem) -1px calc(2px + 0.75rem);
    }

    .banner::after {
      inset: 0.75rem 0.75rem -2px 0.75rem;
    }

    .header {
      padding: 3rem 0;
    }

    .title {
      font-size: 24px;
    }
  }
</style>
