---
import Layout from "@/layouts/default.astro";
---

<Layout
  title="Kontakt aufnehmen"
  description="Fragen, Anfragen oder sonstige Nachrichten kannst du uns hier gerne direkt zusenden. Wir freuen uns über jede Nachricht."
  hasSidebar
  hasTitle
  hasBackground
  class="content"
>
  <p>
    Wir freuen uns, dass du Kontakt mit uns aufnehmen möchtest. Fülle dazu
    einfach das Formular aus und klicke anschließend auf “Senden”.
  </p>

  <p>
    Alternativ kannst du uns auch direkt per E-Mail an <a
      href="mailto:kontakt@leo-club-weilamrhein.de"
      >kontakt@leo-club-weilamrhein.de</a
    > anschreiben. Wir melden uns bei dir so schnell wie möglich.
  </p>

  <form data-form class="grid grid-cols-2 gap-8">
    <div class="relative">
      <label class="label" for="name">Vor- und Nachname</label>
      <input
        data-validate
        class="input"
        type="text"
        id="name"
        name="name"
        required
        data-error="Bitte gebe deinen Vor- und Nachnamen an"
      />
    </div>

    <div class="relative col-start-1 col-end-2">
      <label class="label" for="email">E-Mail-Adresse</label>
      <input
        data-validate
        class="input"
        type="email"
        id="email"
        name="email"
        required
        data-error="Bitte gebe eine gültige E-Mail-Addresse an"
      />
    </div>

    <div class="relative col-start-1 col-end-2">
      <label class="label" for="phone">Telefonnummer (optional)</label>
      <input class="input" type="text" id="phone" name="phone" />
    </div>

    <div class="relative col-start-2 row-start-1 row-end-4 flex flex-col">
      <input
        type="text"
        name="honeypot"
        id="honeypot"
        autocomplete="off"
        aria-hidden="true"
        tabindex="-1"
        hidden
      />
      <label class="label" for="message">Deine Nachricht</label>
      <textarea
        data-validate
        class="input flex-1"
        id="message"
        name="message"
        required
        data-error="Bitte schreibe mindestens 10 Buchstaben"
        minlength="10"></textarea>
    </div>

    <button
      class="button col-start-1 col-end-3 justify-center"
      type="submit"
      aria-live="assertive"
      data-submit>Nachricht senden</button
    >
  </form>
</Layout>

<script>
  let form = document.querySelector("[data-form]") as HTMLFormElement;
  let inputs = form.querySelectorAll(
    "input, textarea",
  ) as NodeListOf<HTMLInputElement>;
  let button = form.querySelector('button[type="submit"]') as HTMLButtonElement;

  form.setAttribute("novalidate", "novalidate");
  form.setAttribute("aria-assertive", "polite");

  function validate(input: HTMLInputElement) {
    if (!input.checkValidity() && !input.hasAttribute("aria-invalid")) {
      let error = document.createElement("p");

      error.setAttribute("id", `${input.name}-error`);
      error.setAttribute("aria-live", "assertive");
      error.classList.add(
        "text-red-500",
        "m-0",
        "font-sans",
        "font-semibold",
        "text-sm",
        "absolute",
        "top-full",
        "right-0",
      );
      error.textContent = input.getAttribute("data-error");

      input.setAttribute("aria-invalid", "true");
      input.setAttribute("aria-describedby", `${input.name}-error`);
      input.insertAdjacentElement("afterend", error);
    } else if (input.checkValidity() && input.hasAttribute("aria-invalid")) {
      input.nextElementSibling?.remove();
      input.removeAttribute("aria-invalid");
      input.removeAttribute("aria-describedby");
    }
  }

  async function send() {
    button.setAttribute("disabled", "");
    button.textContent = "Bitte warten...";

    let response = await fetch("/api/send-email", {
      method: "POST",
      body: new FormData(form),
    });

    if (response.ok) {
      button.textContent = "Nachricht wurde gesendet";
    } else {
      button.textContent = "Fehler beim Zustellen";
      button.removeAttribute("disabled");
    }
  }

  function handleSubmit(event: SubmitEvent) {
    event.preventDefault();

    inputs.forEach(validate);

    let firstInvalid = form.querySelector<HTMLInputElement>(
      '[aria-invalid="true"]',
    );

    if (firstInvalid) {
      firstInvalid.focus();
    } else {
      send();
    }
  }

  function handleBlur(event: FocusEvent) {
    let input = event.target as HTMLInputElement;

    if (input.hasAttribute("data-touched")) {
      validate(input);
    }
  }

  function handleInput(event: Event) {
    let input = event.target as HTMLInputElement;

    input.setAttribute("data-touched", "true");

    if (input.getAttribute("aria-invalid") === "true") {
      validate(input);
    }
  }

  form.addEventListener("submit", handleSubmit);

  for (let input of inputs) {
    input.addEventListener("blur", handleBlur);
    input.addEventListener("input", handleInput);
  }
</script>
