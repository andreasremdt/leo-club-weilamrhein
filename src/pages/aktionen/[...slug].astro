---
import { Picture } from "astro:assets";
import type { GetStaticPaths } from "astro";
import Layout from "@/layouts/default.astro";
import { getPosts, formatDate } from "@/lib/utils";
import Gallery from "@/components/gallery.astro";

export let getStaticPaths = (async () => {
  let posts = await getPosts();

  return posts.map((entry) => ({
    params: { slug: entry.slug },
    props: { entry },
  }));
}) satisfies GetStaticPaths;

let { entry } = Astro.props;
let { Content } = await entry.render();
---

<Layout
  title={entry.data.title}
  description={entry.body.slice(0, 150)}
  hasSidebar
  hasBackground
>
  {
    entry.data.images ? (
      <figure class="-mx-4 -mt-4 sm:-mx-8 md:-mx-12 md:-mt-8">
        <Picture
          src={entry.data.images[0].src}
          formats={["avif", "webp"]}
          alt={entry.data.images[0].alt || ""}
          width={1000}
          height={600}
          quality={80}
          loading="eager"
          class="aspect-video object-cover"
          pictureAttributes={{
            class: "bordered bg-neutral-200 dark:bg-neutral-600",
          }}
        />
      </figure>
    ) : null
  }

  <header
    class:list={[
      "mb-8 flex flex-col items-center bg-white bg-[url(/leafs-center.svg)] bg-bottom bg-no-repeat p-8 pb-16 text-center dark:bg-neutral-700",
      {
        "sm:relative sm:mx-8 sm:-mt-24 md:mx-12": Boolean(entry.data.images),
      },
    ]}
  >
    <h1 class="h1 mb-2">{entry.data.title}</h1>
    <time
      datetime={entry.data.created_at.toISOString()}
      class="text-sm text-neutral-500 dark:text-neutral-400"
    >
      Ver√∂ffentlicht am {formatDate(entry.data.created_at)}
    </time>
  </header>

  <div class="content">
    <Content />
  </div>

  {
    entry.data.images ? (
      <Gallery
        class="mt-6"
        images={entry.data.images}
        galleryId="post"
        width={400}
        height={400}
      />
    ) : null
  }
</Layout>
